package highPerformanceMySQL.chapterOne;

/*
*	MySQL性能优化   学习笔记1
*	@author  zaichiyikoua
*	@time  2020年1月1日
*	@description  { 并发控制之 读写锁 }
*/

public class Note {
    // 在数据库中，无论何时，只要有多个查询需要在同一时刻修改数据，都会产生并发控制的问题
    // 一般设计良好的系统会用"锁"来防止数据被破坏

    // 在处理并发"读"或者"写"的时候，通过实现一个有两种类型的锁组成的"锁系统"来解决问题
    // 这两种锁被称为"共享锁"和"排他锁"，也叫"读锁"和"写锁"

    // 想起了ReentrantReadWriteLock，也是这么设计的，读的时候共享，写的时候排他

    // "读锁"是共享的，互不阻塞的，多个客户可以在同一时刻同时读取同一资源
    // "写锁"是排他的，也就是说一个写锁会阻塞其他的写锁和读锁，这是处于安全策略的考虑
    // 只用这样能保证数据库的安全问题，反例可以参见脏读，脏读就是写锁，读不加锁

    // 在实际的数据库系统中，每时每刻都在发生锁定，当每个用户在修改某一部分数据时，MySQL会通过锁定
    // 来防止其他用户进行读取统一数据，大多数时候，MySQL锁的内部管理都是透明的
}
